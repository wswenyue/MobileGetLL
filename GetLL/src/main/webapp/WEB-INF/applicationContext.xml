<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean name="drawRequest" class="com.xiayule.getll.draw.request.impl.DrawRequestImpl" lazy-init="false" init-method="init">
        <property name="autoPlayJob" ref="autoPlay"/>
    </bean>

    <bean name="redisService" class="com.xiayule.getll.service.impl.RedisServiceImpl">
        <property name="redisDataSource" ref="redisDataSource"/>
    </bean>

    <bean name="cookieService" class="com.xiayule.getll.service.impl.CookieServiceImpl">
        <property name="redisService" ref="redisService"/>
    </bean>

    <bean name="httpService" class="com.xiayule.getll.service.impl.HttpServiceImpl"
            scope="prototype">
        <property name="cookieService" ref="cookieService"/>
    </bean>

    <bean name="playService" class="com.xiayule.getll.service.impl.PlayServiceImpl"
          scope="prototype">

        <property name="cookieService" ref="cookieService"/>
        <property name="httpService" ref="httpService"/>
        <!--<property name="creditLogService" ref="creditLogService"/>-->
    </bean>

    <bean name="registerCodeService" class="com.xiayule.getll.service.impl.RegisterCodeServiceImpl">
        <property name="redisService" ref="redisService"/>
    </bean>

    <bean name="subscribeService" class="com.xiayule.getll.service.impl.SubscriberServiceImpl">
        <property name="redisService" ref="redisService"/>
        <property name="registerCodeService" ref="registerCodeService"/>
    </bean>

    <bean name="creditLogService" class="com.xiayule.getll.service.impl.CreditLogServiceImpl">
        <property name="redisService" ref="redisService"/>
    </bean>


    <bean name="creditService" class="com.xiayule.getll.service.impl.CreditServiceImpl">
        <property name="redisService" ref="redisService"/>
    </bean>

    <bean name="defaultAction" class="com.xiayule.getll.action.DefaultAction">

    </bean>

    <bean name="subscribeAction" class="com.xiayule.getll.action.SubscribeAction" scope="prototype">
        <property name="subscriberService" ref="subscribeService"/>
    </bean>

    <bean name="searchAction" class="com.xiayule.getll.action.SearchAction" scope="prototype">
        <property name="subscriberService" ref="subscribeService"/>
        <property name="creditService" ref="creditService"/>
        <property name="creditLogService" ref="creditLogService"/>
    </bean>

    <bean name="ajaxAction" class="com.xiayule.getll.action.AjaxAction" scope="prototype">
        <property name="subscriberService" ref="subscribeService"/>
        <property name="playService" ref="playService"/>
        <property name="registerCodeService" ref="registerCodeService"/>
        <property name="cookieService" ref="cookieService"/>
        <property name="drawRequest" ref="drawRequest"/>
        <!--<property name="creditLogService" ref="creditLogService"/>-->
    </bean>

    <bean id="adminAction" class="com.xiayule.getll.action.AdminAction">
        <property name="subscriberService" ref="subscribeService"/>
    </bean>

    <bean name="homeAction" class="com.xiayule.getll.action.HomeAction" scope="prototype">

    </bean>

    <bean name="redisDataSource" class="com.xiayule.getll.service.impl.RedisDataSourceImpl">
        <property name="jedisPool" ref="jedisPool"/>
    </bean>

    <bean name="authInterceptor" class="com.xiayule.getll.interceptot.AuthInterceptor">
        <property name="subscriberService" ref="subscribeService"/>
    </bean>


    <bean name="score" class="com.xiayule.getll.action.Score">

    </bean>

    <bean name="autoPlay" class="com.xiayule.getll.draw.job.impl.AutoPlayJobImpl" scope="prototype">
        <property name="creditService" ref="creditService"/>
        <property name="playService" ref="playService"/>
    </bean>

    <!--todo: 这个是需要优化的， drawRequest 传的参数可以是 autoPlay 或者是  autoPlayForFriend, 而不是 mobile -->
    <bean name="autoPlayForFriend" class="com.xiayule.getll.draw.job.impl.AutoPlayForFriendJob" scope="prototype">
        <property name="creditService" ref="creditService"/>
        <property name="playService" ref="playService"/>
    </bean>


    <!-- mail 配置 -->
    <!--<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        &lt;!&ndash; 服务器 &ndash;&gt;
        <property name="host" value="smtp.163.com" />
        &lt;!&ndash; 端口号 &ndash;&gt;
        <property name="port" value="25" />
        &lt;!&ndash; 用户名 &ndash;&gt;
        <property name="username" value="443016215@163.com" />
        &lt;!&ndash;  密码   &ndash;&gt;
        <property name="password" value="~6224989a" />
        &lt;!&ndash; SMTP服务器验证 &ndash;&gt;
        <property name="javaMailProperties">
            <props>
                &lt;!&ndash; 验证身份 &ndash;&gt;
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
    </bean>

    &lt;!&ndash;
       目前我用过的EMAIL账号都是网易的,下面列出网易的SMTP服务器名和端口号:
        网易邮箱          SMTP服务器     SMTP端口     POP3服务器       POP3端口
        @126.com     smtp.126.com      25          pop3.126.com      110
        @163.com     smtp.163.com      25          pop3.163.com      110
        @yeah.net    smtp.yeah.net      25          pop3.yeah.net     110
    &ndash;&gt;

    <bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
        &lt;!&ndash; 发件人email &ndash;&gt;
        <property name="from" value="443016215@163.com" />
        &lt;!&ndash;
         收件人email
        <property name="to" value="to@yeah.net" />
        email主题(标题)
        <property name="subject" value="Subject" />
        email主题内容
        <property name="text">
          <value>ContentText</value>
        </property>
        &ndash;&gt;
    </bean>

    <bean id="simpleMail" class="com.xiayule.getll.mail.Email">
        <property name="mailSender" ref="mailSender" />
        <property name="simpleMailMessage" ref="simpleMailMessage" />
    </bean>-->

    <!-- redis 配置 -->

    <!-- 加载redis配置文件 -->
    <context:property-placeholder location="classpath:redis.properties"/>

    <!-- redis连接池的配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="${redis.pool.maxActive}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!--<property name="minIdle" value="${redis.pool.minIdle}"/>-->
        <property name="maxWait" value="${redis.pool.maxWait}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
    </bean>

    <!-- redis的连接池pool，不是必选项：timeout/password  -->
    <bean id = "jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.host}"/>
        <constructor-arg index="2" value="${redis.port}" type="int"/>
        <constructor-arg index="3" value="${redis.timeout}" type="int"/>
        <!--<constructor-arg index="4" value="${redis.password}"/>-->
    </bean>
</beans>